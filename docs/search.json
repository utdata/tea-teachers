[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "tea-teachers",
    "section": "",
    "text": "This is the Quarto website and project for an analysis looking into the salaries and cost of living for teachers across Texas. This project is in association with Texas Newsroom/KUT. The questions come from a proposed bill that would give more funding to teachers in specific-sized school districts (unclear exactly which ones).\nThis project was created by Karina Kumar on March 3rd, 2025 for the Media Innovation Group.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#our-questions",
    "href": "index.html#our-questions",
    "title": "tea-teachers",
    "section": "Our questions:",
    "text": "Our questions:\n\nHow are teachers doing now re: buying power compared to the last several years (using salary and cost of living)?\nAnd are rural teachers really doing worse?\nWill the bill fix the problem it says it will?",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "AnalysisSecondary.html",
    "href": "AnalysisSecondary.html",
    "title": "Secondary Analysis",
    "section": "",
    "text": "Questions to answer:\nNOTE: I used 2024 data to answer these, but can easily look at it for another year or overtime.\nHere’s a sample of the data.",
    "crumbs": [
      "Secondary Analysis"
    ]
  },
  {
    "objectID": "AnalysisSecondary.html#which-district-types-have-the-biggest-discrepancy-between-cost-of-living-and-average-salary-in-2024",
    "href": "AnalysisSecondary.html#which-district-types-have-the-biggest-discrepancy-between-cost-of-living-and-average-salary-in-2024",
    "title": "Secondary Analysis",
    "section": "Which district types have the biggest discrepancy between cost of living and average salary in 2024?",
    "text": "Which district types have the biggest discrepancy between cost of living and average salary in 2024?\n\nBy TEA district type\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(end_year == 2024) |&gt; \n  group_by (tea_description) |&gt; \n  summarize( avg_difference = mean(difference),\n             total_districts_of_this_type = n(),\n             total_students_affected = sum(total_enrollment)) |&gt; \n  arrange(avg_difference)\n\n\n\n  \n\n\n\nOf the TEA district types, Non-metropolitan Fast Growing districts have the worst discrepancy between the average salary for a district and that district’s county’s ALICE cost of living. There are 34 districts and almost 62,000 students that fall into this category of Non-metropolitan fast-growing.\n\n\nBy bill category (enrollment)\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(end_year == 2024) |&gt; \n  group_by (bill_category) |&gt; \n  summarize( avg_difference = mean(difference),\n             total_districts_of_this_type = n(),\n             total_students_affected = sum(total_enrollment)) |&gt; \n  arrange(avg_difference)\n\n\n\n  \n\n\n\nOf the categories outlined by the bill (enrollment-based), districts that have under 1600 students (but more than 300) have the worst discrepancy between the average salary for a district and that district’s county’s ALICE cost of living. There are 425 districts and about 340,000 students that fall into this category of under 1600 enrollment.",
    "crumbs": [
      "Secondary Analysis"
    ]
  },
  {
    "objectID": "AnalysisSecondary.html#what-proportion-of-districts-in-each-category-are-abovebelow-alice-threshold-in-2024",
    "href": "AnalysisSecondary.html#what-proportion-of-districts-in-each-category-are-abovebelow-alice-threshold-in-2024",
    "title": "Secondary Analysis",
    "section": "What proportion of districts in each category are above/below alice threshold in 2024?",
    "text": "What proportion of districts in each category are above/below alice threshold in 2024?\n\nBased on the TEA categories\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(end_year == 2024) |&gt; \n  group_by(tea_description) |&gt; \n  summarize(under_alice = sum(above_alice == FALSE),\n            total_districts_2024 = n()) |&gt; \n  mutate(prop_under_alice = (under_alice / total_districts_2024) |&gt; round_half_up(3)) |&gt; \n  arrange(desc(prop_under_alice))\n\n\n\n  \n\n\n\nThe above table shows the number of districts in each TEA district type category where the average salary does not meet the ALICE cost of living threshold (under_alice), the total number of districts in 2024 that fell into that district type category (total_districts_2024) and the proportion of districts in that district type category that where the average salary does not meet the ALICE cost of living threshold (prop_under_alice).\n\n\nBased on the bill categories (enrollment)\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(end_year == 2024) |&gt; \n  group_by(bill_category) |&gt; \n  summarize(under_alice = sum(above_alice == FALSE),\n            total_districts_2024 = n()) |&gt; \n  mutate(prop_under_alice = (under_alice / total_districts_2024) |&gt; round_half_up(3)) |&gt; \n  arrange(desc(prop_under_alice))\n\n\n\n  \n\n\n\nThis table shows the number of districts in each bill-defined enrollment category where the average salary does not meet the ALICE cost of living threshold (under_alice), the total number of districts in 2024 that fell into that bill-defined enrollment category (total_districts_2024) and the proportion of districts in that category that where the average salary does not meet the ALICE cost of living threshold (prop_under_alice).",
    "crumbs": [
      "Secondary Analysis"
    ]
  },
  {
    "objectID": "AnalysisSecondary.html#how-many-districts-of-each-type-are-under-5000-enrollment-and-what-proportion-of-districts-in-each-type-are-under-5000-enrollment",
    "href": "AnalysisSecondary.html#how-many-districts-of-each-type-are-under-5000-enrollment-and-what-proportion-of-districts-in-each-type-are-under-5000-enrollment",
    "title": "Secondary Analysis",
    "section": "How many districts of each type are under 5000 enrollment and what proportion of districts in each type are under 5000 enrollment?",
    "text": "How many districts of each type are under 5000 enrollment and what proportion of districts in each type are under 5000 enrollment?\nThis is based on the TEA district types.\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(end_year == 2024 ) |&gt; \n  group_by(tea_description) |&gt; \n  summarize(districts_under_5000 = sum(total_enrollment &lt; 5000),\n            total_districts = n()) |&gt; \n  mutate(\n    prop_districts_under_5000 = (districts_under_5000 / total_districts) |&gt; round_half_up(3)\n  ) |&gt; arrange(desc(prop_districts_under_5000))\n\n\n\n  \n\n\n\nIn 2024, the “Rural” district type had the most districts with enrollment under 5000 at 461.",
    "crumbs": [
      "Secondary Analysis"
    ]
  },
  {
    "objectID": "AnalysisSecondary.html#how-many-major-urbansuburban-districts-are-under-5000-and-how-do-they-pay-their-teachers",
    "href": "AnalysisSecondary.html#how-many-major-urbansuburban-districts-are-under-5000-and-how-do-they-pay-their-teachers",
    "title": "Secondary Analysis",
    "section": "How many major urban/suburban districts are under 5000 and how do they pay their teachers?",
    "text": "How many major urban/suburban districts are under 5000 and how do they pay their teachers?\nBased on the table from the last question, there were 0 districts in 2024 that were considered Major Urban and had enrollment under 5000. There were 7 districts in 2025 that were considered Major Suburban and had enrollment under 5000. Let’s look at those 7.\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(tea_description == \"Major Suburban\" & end_year == 2024 & total_enrollment &lt; 5000) # add select to simplify\n\n\n\n  \n\n\n\nOf these 7 districts, 3 had an average salary that did not meet the ALICE cost of living threshold.",
    "crumbs": [
      "Secondary Analysis"
    ]
  },
  {
    "objectID": "AnalysisSecondary.html#what-number-of-districts-in-texas-pay-their-teachers-under-living-wage-whats-that-in-a-percentage",
    "href": "AnalysisSecondary.html#what-number-of-districts-in-texas-pay-their-teachers-under-living-wage-whats-that-in-a-percentage",
    "title": "Secondary Analysis",
    "section": "What number of districts in Texas pay their teachers under living wage? What’s that in a percentage?",
    "text": "What number of districts in Texas pay their teachers under living wage? What’s that in a percentage?\n\n\nExpand this to see code\nabove_below_alice |&gt; ungroup() |&gt; filter(end_year == 2024 & above_alice == F) |&gt; \n  summarize(total_districts_in_Texas_under_alice_threshold = n())\n\n\n\n  \n\n\n\nIn 2024, 463 districts in Texas on average paid their teachers under a living wage.\nNow, the percentage.\n\n\nExpand this to see code\nabove_below_alice |&gt; ungroup() |&gt;  filter(end_year == 2024) |&gt; \n  summarise( under_alice = sum(above_alice == F),\n             total_districts = n()) |&gt; \n  mutate(percent_districts_under_alice_threshold = ((under_alice / total_districts)*100) |&gt; round_half_up(1))\n\n\n\n  \n\n\n\nIn 2024, 45.4% of districts in Texas on average paid their teachers under a living wage.",
    "crumbs": [
      "Secondary Analysis"
    ]
  },
  {
    "objectID": "AnalysisSecondary.html#what-percentage-of-students-are-served-by-teachers-that-are-underpaid",
    "href": "AnalysisSecondary.html#what-percentage-of-students-are-served-by-teachers-that-are-underpaid",
    "title": "Secondary Analysis",
    "section": "What percentage of students are served by teachers that are underpaid?",
    "text": "What percentage of students are served by teachers that are underpaid?\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(end_year == 2024 ) |&gt; ungroup() |&gt; \n  summarise(total_students_served_by_underpaid_teachers = sum(total_enrollment[above_alice == F]),\n    total_students = sum(total_enrollment)\n  ) |&gt; mutate(\n    percent_students_served_by_underpaid_teachers = (total_students_served_by_underpaid_teachers / total_students * 100) |&gt; round_half_up(2)\n  ) #|&gt; select(percent_students_served_by_underpaid_teachers)\n\n\n\n  \n\n\n\nIn 2024, 31.15% of students were served by teachers who were on average paid under a living wage.",
    "crumbs": [
      "Secondary Analysis"
    ]
  },
  {
    "objectID": "AnalysisSecondary.html#are-there-more-districts-being-helped-in-the-tea-rural-definition-or-the-bills-enrollment-breakdown",
    "href": "AnalysisSecondary.html#are-there-more-districts-being-helped-in-the-tea-rural-definition-or-the-bills-enrollment-breakdown",
    "title": "Secondary Analysis",
    "section": "Are there more districts being helped in the TEA “Rural” definition or the bill’s enrollment breakdown?",
    "text": "Are there more districts being helped in the TEA “Rural” definition or the bill’s enrollment breakdown?\nDistricts being helped by TEA “Rural” description\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(end_year == 2024 & tea_description == \"Rural\") |&gt; ungroup() |&gt; \n  count(name = \"total_districts_TEA_rural\")\n\n\n\n  \n\n\n\n464 districts would get money if the bill targeted TEA’s “Rural” districts based on 2022-2023 TEA district types.\nDistircts being helped based on bill categories of enrollment.\n\n\nExpand this to see code\nabove_below_alice |&gt; filter(end_year == 2024 & (bill_category == \"under 300\" | bill_category == \"under 1600\" | bill_category == \"under 5000\")) |&gt; \n  group_by(bill_category) |&gt; \n  count(name = \"total_districts\") |&gt; adorn_totals()\n\n\n\n  \n\n\n\n827 total districts would get money with the bill targeting districts under 5000, under 1600 and under 300 enrollment based on 2023-2024 enrollment.",
    "crumbs": [
      "Secondary Analysis"
    ]
  },
  {
    "objectID": "AnalysisNCES.html",
    "href": "AnalysisNCES.html",
    "title": "AnalysisNCES",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(sf)\nlibrary(mapview)\nlibrary(RColorBrewer)\n\n\nteaching_staff_totals &lt;- read_rds(\"data-processed/teaching_staff_totals.rds\")\nsalary_col_comparison &lt;- read_rds(\"data-processed/salary_col_comparison.rds\")",
    "crumbs": [
      "NCES District Type Analysis"
    ]
  },
  {
    "objectID": "AnalysisNCES.html#setup",
    "href": "AnalysisNCES.html#setup",
    "title": "AnalysisNCES",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(sf)\nlibrary(mapview)\nlibrary(RColorBrewer)\n\n\nteaching_staff_totals &lt;- read_rds(\"data-processed/teaching_staff_totals.rds\")\nsalary_col_comparison &lt;- read_rds(\"data-processed/salary_col_comparison.rds\")",
    "crumbs": [
      "NCES District Type Analysis"
    ]
  },
  {
    "objectID": "AnalysisNCES.html#nces-district-types",
    "href": "AnalysisNCES.html#nces-district-types",
    "title": "AnalysisNCES",
    "section": "NCES District Types",
    "text": "NCES District Types\nWe decided not to use this so I moved the analysis I already did with NCES district types down here and didn’t continue to use it.\n\nCount and Average Pay for NCES\n\nteaching_staff_totals |&gt; group_by(nces_description) |&gt; count()\n\n\n  \n\n\n\nFinding average pay per school year for each NCES district type.\n\ndistrict_types_nces_chart &lt;- teaching_staff_totals |&gt; group_by(nces_description, school_year) |&gt; \n  summarize(avg_pay = mean(average_base_pay))\n\n`summarise()` has grouped output by 'nces_description'. You can override using\nthe `.groups` argument.\n\ndistrict_types_nces_chart\n\n\n  \n\n\n\nGraphing it.\n\nggplot(district_types_nces_chart, aes(x = school_year, y = avg_pay, color = nces_description, group = nces_description)) +\n  geom_point() +\n  geom_line() +\n  theme(legend.position = \"bottom\") +\n  guides(color = guide_legend(nrow = 4, byrow = TRUE))\n\n\n\n\n\n\n\n\n\n\nAverage and Median of difference between salary and ALICE for each NCES district type\n\nsalary_col_comparison |&gt; group_by(nces_description) |&gt; \n  summarize(avg_difference = mean(difference),\n            median_difference = median(difference),\n            number_of_districts = n()) |&gt; \n  arrange(avg_difference)\n\n\n  \n\n\n\n\navg_difference_over_time_nces &lt;- salary_col_comparison |&gt; group_by(nces_description, end_year) |&gt; \n  summarize(avg_difference = mean(difference))\n\n`summarise()` has grouped output by 'nces_description'. You can override using\nthe `.groups` argument.\n\navg_difference_over_time_nces\n\n\n  \n\n\n\n\nggplot(avg_difference_over_time_nces, \n       aes(x = end_year, y = avg_difference, color = nces_description, group = nces_description)) + \n  geom_line() +\n  scale_y_continuous(limits = c(-10000,5000), n.breaks = 10)",
    "crumbs": [
      "NCES District Type Analysis"
    ]
  },
  {
    "objectID": "CleaningTEASalaries.html",
    "href": "CleaningTEASalaries.html",
    "title": "Cleaning TEA Salaries",
    "section": "",
    "text": "Importing the libraries we need.\n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(readxl)",
    "crumbs": [
      "Cleaning TEA Salaries"
    ]
  },
  {
    "objectID": "CleaningTEASalaries.html#setup",
    "href": "CleaningTEASalaries.html#setup",
    "title": "Cleaning TEA Salaries",
    "section": "",
    "text": "Importing the libraries we need.\n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(readxl)",
    "crumbs": [
      "Cleaning TEA Salaries"
    ]
  },
  {
    "objectID": "CleaningTEASalaries.html#import-all-the-salary-files",
    "href": "CleaningTEASalaries.html#import-all-the-salary-files",
    "title": "Cleaning TEA Salaries",
    "section": "Import all the salary files",
    "text": "Import all the salary files\n\nsalary_files_list &lt;- list.files(\n  \"data-raw\",\n  pattern = \".csv\",\n  full.names = T\n)\n\nsalary_files_list\n\n [1] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2014-2015.csv\"\n [2] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2015-2016.csv\"\n [3] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2016-2017.csv\"\n [4] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2017-2018.csv\"\n [5] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2018-2019.csv\"\n [6] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2019-2020.csv\"\n [7] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2020-2021.csv\"\n [8] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2021-2022.csv\"\n [9] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2022-2023.csv\"\n[10] \"data-raw/Staff Salary FTE Report_Statewide_Districts_2023-2024.csv\"\n\n\n\nimport_files &lt;- function(file_name) {\n  df &lt;- file_name |&gt; \n    read_csv(     #read csv first and skip the TEA heading lines\n      skip = 5) |&gt;\n    clean_names() |&gt; \n    mutate(fte_count = as.numeric(fte_count),\n           total_base_pay = as.numeric(total_base_pay),\n           average_base_pay = as.numeric(average_base_pay))\n}\n\ntea_salaries &lt;- salary_files_list |&gt; set_names(basename) |&gt; \n  map(import_files) |&gt;  #map on our new function\n  list_rbind(names_to = \"source\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 39350 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Region, County, District, District Name, Charter Status, Staff_Cat...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There were 3 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `fte_count = as.numeric(fte_count)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 39096 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Region, County, District, District Name, Charter Status, Staff_Cat...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There were 3 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `fte_count = as.numeric(fte_count)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 39429 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Region, County, District, District Name, Charter Status, Staff_Cate...\ndbl (3): FTE Count, Total Base Pay, Average Base Pay\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 51617 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Region, County, District, District Name, Charter Status, Staff_Cat...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There were 3 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `fte_count = as.numeric(fte_count)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 52126 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Region, County, District, District Name, Charter Status, Staff_Cate...\ndbl (3): FTE Count, Total Base Pay, Average Base Pay\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 52224 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Region, County, District, District Name, Charter Status, Staff_Cate...\ndbl (3): FTE Count, Total Base Pay, Average Base Pay\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 52500 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Region, County, District, District Name, Charter Status, Staff_Cate...\ndbl (3): FTE Count, Total Base Pay, Average Base Pay\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 53092 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Region, County, District, District Name, Charter Status, Staff_Cat...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There were 3 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `fte_count = as.numeric(fte_count)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 2 remaining warnings.\nOne or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 53521 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Region, County, District, District Name, Charter Status, Staff_Cate...\ndbl (3): FTE Count, Total Base Pay, Average Base Pay\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 53839 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Region, County, District, District Name, Charter Status, Staff_Cate...\ndbl (3): FTE Count, Total Base Pay, Average Base Pay\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntea_salaries\n\n\n  \n\n\n\nI know that the end of each file has weird extra lines with extra text. Let’s remove all of those lines that don’t have an actual region. Then we check that the files combined correctly by looking at the end of the datatset\n\ntea_salaries &lt;- tea_salaries |&gt; filter(str_length(region) &lt;= 2)\n\ntea_salaries |&gt; tail(50)\n\n\n  \n\n\n\nAnother check that the files combined correctly.\n\ntea_salaries |&gt; group_by(district) |&gt; \n  summarize(total = n())\n\n\n  \n\n\n\nAnother check that the files combined correctly.\n\ntea_salaries$staff_category |&gt; unique()\n\n[1] \"TEACHING STAFF\"         \"SUPPORT STAFF\"          \"ADMINISTRATIVE STAFF\"  \n[4] NA                       \"PARAPROFESSIONAL STAFF\" \"AUXILIARY\"             \n[7] \"AUXILIARY STAFF\"        \"TRADITIONAL ISD/CSD\"   \n\n\n“TRADITIONAL ISD/CSD” shouldn’t be in there. Let’s see where that error is occurring.\n\ntea_salaries |&gt; filter(staff_category == \"TRADITIONAL ISD/CSD\")\n\n\n  \n\n\n\nIt’s only one row…and it looks like it might be missing data. Let’s look at all the rows for this district.\n\ntea_salaries |&gt; filter(district == \"176901\")\n\n\n  \n\n\n\nThese look normal…we only want staff_category that is “TEACHING STAFF” anyways so we can disregard that weird row since it has “ADMINISTRATIVE STAFF”.\nNow we want to pull the school year from the file name (source column). Then we will get rid of that source column cause we don’t need it anymore and then I need ot factor the years so R understands that the strings have an order.\n\nteaching_staff_salaries &lt;- tea_salaries |&gt; filter(staff_category == \"TEACHING STAFF\") |&gt; \n  mutate(school_year = substr(source, start = (nchar(source) - 13 + 1), stop = nchar(source)-4))\n\nteaching_staff_salaries &lt;- teaching_staff_salaries |&gt; select(-source) |&gt; \n  mutate(\n    school_year = factor(school_year, \n                         levels = c(\"2014-2015\", \"2015-2016\", \"2016-2017\", \"2017-2018\", \"2018-2019\", \"2019-2020\", \"2020-2021\", \"2021-2022\", \"2022-2023\", \"2023-2024\")))\n\ncolnames(teaching_staff_salaries)[colnames(teaching_staff_salaries) == \"district\"] &lt;- \"district_number\"\n\nteaching_staff_salaries",
    "crumbs": [
      "Cleaning TEA Salaries"
    ]
  },
  {
    "objectID": "CleaningTEASalaries.html#district-types-and-join",
    "href": "CleaningTEASalaries.html#district-types-and-join",
    "title": "Cleaning TEA Salaries",
    "section": "District Types and Join",
    "text": "District Types and Join\nLet’s read in the district types spreadsheet. We also want to clean the names and then change the first column to be district_name so it doesn’t conflict when we join it later.\n\ndistrict_types &lt;- read_xlsx(\"data-raw/district-type2223.xlsx\", sheet = \"2223_Data\") |&gt; clean_names()\n\ncolnames(district_types)[colnames(district_types) == 'district'] &lt;- 'district_name'\n\ndistrict_types\n\n\n  \n\n\n\nNow I am going to join the district type data frame with the district salary data.\n\nsalaries_district_types &lt;- teaching_staff_salaries |&gt;  left_join(district_types, by = \"district_number\") \n\nsalaries_district_types \n\n\n  \n\n\n\n\nsalaries_district_types |&gt; count(district_number, district_name.x, district_name.y) |&gt; count(district_number, sort = T)\n\n\n  \n\n\n\n\nsalaries_district_types |&gt; filter(district_number == \"227824\") \n\n\n  \n\n\n\n\nsalaries_district_types &lt;- salaries_district_types |&gt; mutate(\n  end_year = substr(school_year, start = 6, stop = 9)\n)\n\nsalaries_district_types",
    "crumbs": [
      "Cleaning TEA Salaries"
    ]
  },
  {
    "objectID": "CleaningTEASalaries.html#export",
    "href": "CleaningTEASalaries.html#export",
    "title": "Cleaning TEA Salaries",
    "section": "Export",
    "text": "Export\nI want to export the above dataframe to use for analysis in my next notebook.\n\nsalaries_district_types |&gt; write_rds(\"data-processed/teaching_staff_salaries.rds\")",
    "crumbs": [
      "Cleaning TEA Salaries"
    ]
  },
  {
    "objectID": "CleaningCPI-ALICE.html",
    "href": "CleaningCPI-ALICE.html",
    "title": "CleaningCPI",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(janitor)\n\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(readxl)\nhistorical_cpi &lt;- read_xlsx(\"data-raw/historical-cpi-u-202502.xlsx\", \n                            skip = 3, \n                            col_names = TRUE,\n                            col_types = c(\"guess\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\"))\n\nWarning: Coercing text to numeric in B6 / R6C2: '1913'\n\n\nWarning: Coercing text to numeric in B7 / R7C2: '1914'\n\n\nWarning: Coercing text to numeric in B8 / R8C2: '1915'\n\n\nWarning: Coercing text to numeric in B9 / R9C2: '1916'\n\n\nWarning: Coercing text to numeric in B10 / R10C2: '1917'\n\n\nWarning: Coercing text to numeric in B11 / R11C2: '1918'\n\n\nWarning: Coercing text to numeric in B12 / R12C2: '1919'\n\n\nWarning: Coercing text to numeric in B13 / R13C2: '1920'\n\n\nWarning: Coercing text to numeric in B14 / R14C2: '1921'\n\n\nWarning: Coercing text to numeric in B15 / R15C2: '1922'\n\n\nWarning: Coercing text to numeric in B16 / R16C2: '1923'\n\n\nWarning: Coercing text to numeric in B17 / R17C2: '1924'\n\n\nWarning: Coercing text to numeric in B18 / R18C2: '1925'\n\n\nWarning: Coercing text to numeric in B19 / R19C2: '1926'\n\n\nWarning: Coercing text to numeric in B20 / R20C2: '1927'\n\n\nWarning: Coercing text to numeric in B21 / R21C2: '1928'\n\n\nWarning: Coercing text to numeric in B22 / R22C2: '1929'\n\n\nWarning: Coercing text to numeric in B23 / R23C2: '1930'\n\n\nWarning: Coercing text to numeric in B24 / R24C2: '1931'\n\n\nWarning: Coercing text to numeric in B25 / R25C2: '1932'\n\n\nWarning: Coercing text to numeric in B26 / R26C2: '1933'\n\n\nWarning: Coercing text to numeric in B27 / R27C2: '1934'\n\n\nWarning: Coercing text to numeric in B28 / R28C2: '1935'\n\n\nWarning: Coercing text to numeric in B29 / R29C2: '1936'\n\n\nWarning: Coercing text to numeric in B30 / R30C2: '1937'\n\n\nWarning: Coercing text to numeric in B31 / R31C2: '1938'\n\n\nWarning: Coercing text to numeric in B32 / R32C2: '1939'\n\n\nWarning: Coercing text to numeric in B33 / R33C2: '1940'\n\n\nWarning: Coercing text to numeric in B34 / R34C2: '1941'\n\n\nWarning: Coercing text to numeric in B35 / R35C2: '1942'\n\n\nWarning: Coercing text to numeric in B36 / R36C2: '1943'\n\n\nWarning: Coercing text to numeric in B37 / R37C2: '1944'\n\n\nWarning: Coercing text to numeric in B38 / R38C2: '1945'\n\n\nWarning: Coercing text to numeric in B39 / R39C2: '1946'\n\n\nWarning: Coercing text to numeric in B40 / R40C2: '1947'\n\n\nWarning: Coercing text to numeric in B41 / R41C2: '1948'\n\n\nWarning: Coercing text to numeric in B42 / R42C2: '1949'\n\n\nWarning: Coercing text to numeric in B43 / R43C2: '1950'\n\n\nWarning: Coercing text to numeric in B44 / R44C2: '1951'\n\n\nWarning: Coercing text to numeric in B45 / R45C2: '1952'\n\n\nWarning: Coercing text to numeric in B46 / R46C2: '1953'\n\n\nWarning: Coercing text to numeric in B47 / R47C2: '1954'\n\n\nWarning: Coercing text to numeric in B48 / R48C2: '1955'\n\n\nWarning: Coercing text to numeric in B49 / R49C2: '1956'\n\n\nWarning: Coercing text to numeric in B50 / R50C2: '1957'\n\n\nWarning: Coercing text to numeric in B51 / R51C2: '1958'\n\n\nWarning: Coercing text to numeric in B52 / R52C2: '1959'\n\n\nWarning: Coercing text to numeric in B53 / R53C2: '1960'\n\n\nWarning: Coercing text to numeric in B54 / R54C2: '1961'\n\n\nWarning: Coercing text to numeric in B55 / R55C2: '1962'\n\n\nWarning: Coercing text to numeric in B56 / R56C2: '1963'\n\n\nWarning: Coercing text to numeric in B57 / R57C2: '1964'\n\n\nWarning: Coercing text to numeric in B58 / R58C2: '1965'\n\n\nWarning: Coercing text to numeric in B59 / R59C2: '1966'\n\n\nWarning: Coercing text to numeric in B60 / R60C2: '1967'\n\n\nWarning: Coercing text to numeric in B61 / R61C2: '1968'\n\n\nWarning: Coercing text to numeric in B62 / R62C2: '1969'\n\n\nWarning: Coercing text to numeric in B63 / R63C2: '1970'\n\n\nWarning: Coercing text to numeric in B64 / R64C2: '1971'\n\n\nWarning: Coercing text to numeric in B65 / R65C2: '1972'\n\n\nWarning: Coercing text to numeric in B66 / R66C2: '1973'\n\n\nWarning: Coercing text to numeric in B67 / R67C2: '1974'\n\n\nWarning: Coercing text to numeric in B68 / R68C2: '1975'\n\n\nWarning: Coercing text to numeric in B69 / R69C2: '1976'\n\n\nWarning: Coercing text to numeric in B70 / R70C2: '1977'\n\n\nWarning: Coercing text to numeric in B71 / R71C2: '1978'\n\n\nWarning: Coercing text to numeric in B72 / R72C2: '1979'\n\n\nWarning: Coercing text to numeric in B73 / R73C2: '1980'\n\n\nWarning: Coercing text to numeric in B74 / R74C2: '1981'\n\n\nWarning: Coercing text to numeric in B75 / R75C2: '1982'\n\n\nWarning: Coercing text to numeric in B76 / R76C2: '1983'\n\n\nWarning: Coercing text to numeric in B77 / R77C2: '1984'\n\n\nWarning: Coercing text to numeric in B78 / R78C2: '1985'\n\n\nWarning: Coercing text to numeric in B79 / R79C2: '1986'\n\n\nWarning: Coercing text to numeric in B80 / R80C2: '1987'\n\n\nWarning: Coercing text to numeric in B81 / R81C2: '1988'\n\n\nWarning: Coercing text to numeric in B82 / R82C2: '1989'\n\n\nWarning: Coercing text to numeric in B83 / R83C2: '1990'\n\n\nWarning: Coercing text to numeric in B84 / R84C2: '1991'\n\n\nWarning: Coercing text to numeric in B85 / R85C2: '1992'\n\n\nWarning: Coercing text to numeric in B86 / R86C2: '1993'\n\n\nWarning: Coercing text to numeric in B87 / R87C2: '1994'\n\n\nWarning: Coercing text to numeric in B88 / R88C2: '1995'\n\n\nWarning: Coercing text to numeric in B89 / R89C2: '1996'\n\n\nWarning: Coercing text to numeric in B90 / R90C2: '1997'\n\n\nWarning: Coercing text to numeric in B91 / R91C2: '1998'\n\n\nWarning: Coercing text to numeric in B92 / R92C2: '1999'\n\n\nWarning: Coercing text to numeric in B93 / R93C2: '2000'\n\n\nWarning: Coercing text to numeric in B94 / R94C2: '2001'\n\n\nWarning: Coercing text to numeric in B95 / R95C2: '2002'\n\n\nWarning: Coercing text to numeric in B96 / R96C2: '2003'\n\n\nWarning: Coercing text to numeric in B97 / R97C2: '2004'\n\n\nWarning: Coercing text to numeric in B98 / R98C2: '2005'\n\n\nWarning: Coercing text to numeric in B99 / R99C2: '2006'\n\n\nWarning: Coercing text to numeric in B100 / R100C2: '2007'\n\n\nWarning: Coercing text to numeric in B101 / R101C2: '2008'\n\n\nWarning: Coercing text to numeric in B102 / R102C2: '2009'\n\n\nWarning: Coercing text to numeric in B103 / R103C2: '2010'\n\n\nWarning: Coercing text to numeric in B104 / R104C2: '2011'\n\n\nWarning: Coercing text to numeric in B105 / R105C2: '2012'\n\n\nWarning: Coercing text to numeric in B106 / R106C2: '2013'\n\n\nWarning: Coercing text to numeric in B107 / R107C2: '2014'\n\n\nWarning: Coercing text to numeric in B108 / R108C2: '2015'\n\n\nWarning: Coercing text to numeric in B109 / R109C2: '2016'\n\n\nWarning: Coercing text to numeric in B110 / R110C2: '2017'\n\n\nWarning: Coercing text to numeric in B111 / R111C2: '2018'\n\n\nWarning: Coercing text to numeric in B112 / R112C2: '2019'\n\n\nWarning: Coercing text to numeric in B113 / R113C2: '2020'\n\n\nWarning: Coercing text to numeric in B114 / R114C2: '2021'\n\n\nWarning: Coercing text to numeric in B115 / R115C2: '2022'\n\n\nWarning: Coercing text to numeric in B116 / R116C2: '2023'\n\n\nWarning: Coercing text to numeric in B117 / R117C2: '2024'\n\n\nWarning: Coercing text to numeric in B118 / R118C2: '2025'\n\n\nWarning: Expecting numeric in E118 / R118C5: got '–'\n\n\nWarning: Expecting numeric in F118 / R118C6: got '–'\n\n\nWarning: Expecting numeric in G118 / R118C7: got '–'\n\n\nWarning: Expecting numeric in H118 / R118C8: got '–'\n\n\nWarning: Expecting numeric in I118 / R118C9: got '–'\n\n\nWarning: Expecting numeric in J118 / R118C10: got '–'\n\n\nWarning: Expecting numeric in K118 / R118C11: got '–'\n\n\nWarning: Expecting numeric in L118 / R118C12: got '–'\n\n\nWarning: Expecting numeric in M118 / R118C13: got '–'\n\n\nWarning: Expecting numeric in N118 / R118C14: got '–'\n\nhistorical_cpi\nhistorical_cpi_clean &lt;- historical_cpi |&gt; \n  clean_names() |&gt; \n  select(-indent_level) |&gt; \n  drop_na(year)\n\nhistorical_cpi_clean\nrecent_cpi &lt;- historical_cpi_clean |&gt; filter(year &gt; 2013)\nrecent_cpi\nrecent_cpi_pivoted &lt;- recent_cpi |&gt; pivot_longer(!year, names_to = \"month\", values_to = \"cpi\")\n\nrecent_cpi_pivoted\ncpi_cleaned &lt;- recent_cpi_pivoted |&gt; mutate(\n  year_month = my(paste(month, year))\n) |&gt; select(year_month,\n            cpi,\n            -year,\n            -month)\n\ncpi_cleaned\ncpi_cleaned |&gt; write_rds(\"data-processed/cpi_201401_202502\")",
    "crumbs": [
      "Cleaning CPI and ALICE"
    ]
  },
  {
    "objectID": "CleaningCPI-ALICE.html#cpi-for-texas",
    "href": "CleaningCPI-ALICE.html#cpi-for-texas",
    "title": "CleaningCPI",
    "section": "CPI for Texas",
    "text": "CPI for Texas\nThere is not data from the government on cost of living or consumer price index by county in Texas. But here’s the statewide consumer price index.\n\nggplot(cpi_cleaned, aes(x = year_month, y = cpi)) +\n  geom_line()\n\nWarning: Removed 10 rows containing missing values (`geom_line()`).\n\n\n\n\n\n\n\n\n\n\nalice &lt;- read_xlsx(\"data-raw/2024 ALICE - Texas Data Sheet.xlsx\",\n                   sheet = \"County 2010-2022\") |&gt; clean_names()\n\nalice \n\n\n  \n\n\n\n\nhousehold_budget &lt;- alice |&gt; select(\n  -geo_id2,\n  -geo_display_label,\n  -state_abbr,\n  -source_american_community_survey\n)\n\nhousehold_budget\n\n\n  \n\n\n\n\nhousehold_budget_simple &lt;- household_budget |&gt; \n  mutate(county = paste(toupper(county), \"COUNTY\"),\n         end_year = as.character(year)) |&gt; \n  select(end_year, county, alice_threshold_hh_under_65)\n\nhousehold_budget_simple\n\n\n  \n\n\n\n\nhousehold_budget_simple |&gt; write_rds(\"data-processed/alice_household_budget.rds\")",
    "crumbs": [
      "Cleaning CPI and ALICE"
    ]
  },
  {
    "objectID": "CleaningEnrollment.html",
    "href": "CleaningEnrollment.html",
    "title": "CleaningEnrollment",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\n\n\nenrollment_file_list &lt;- list.files(\n  \"data-raw/enrollment\",\n  pattern = \".csv\",\n  full.names = TRUE\n)\n\nenrollment_file_list\n\n [1] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2014-2015.csv\"\n [2] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2015-2016.csv\"\n [3] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2016-2017.csv\"\n [4] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2017-2018.csv\"\n [5] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2018-2019.csv\"\n [6] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2019-2020.csv\"\n [7] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2020-2021.csv\"\n [8] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2021-2022.csv\"\n [9] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2022-2023.csv\"\n[10] \"data-raw/enrollment/Enrollment Report_Statewide_Districts_Gender_2023-2024.csv\"\n\n\n\nimporting_cleaning &lt;- function(file_name) {\n  df &lt;- file_name |&gt;  \n    read_csv(     #read csv first and skip the TEA heading lines\n      skip = 4) |&gt; \n    clean_names() |&gt;  # clean names to make the names uniform\n    mutate(enrollment = as.numeric(enrollment))  # change the column enrollment to a charcater for joining later\n}\n\nenrollment_all &lt;- enrollment_file_list |&gt; \n  map(importing_cleaning) |&gt;  #map on our new function\n  list_rbind()\n\nRows: 2440 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Year, Region, County Name, District Name, District Number, Charter ...\ndbl (1): Enrollment\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2416 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Year, Region, County Name, District Name, District Number, Charter ...\ndbl (1): Enrollment\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2408 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Year, Region, County Name, District Name, District Number, Charter ...\ndbl (1): Enrollment\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2402 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): Year, Region, County Name, District Name, District Number, Charter ...\ndbl (1): Enrollment\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2406 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): YEAR, REGION, COUNTY NAME, DISTRICT NUMBER, DISTRICT NAME, GENDER, ...\ndbl (1): ENROLLMENT\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 2407 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): YEAR, REGION, COUNTY NAME, DISTRICT NUMBER, DISTRICT NAME, GENDER, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `enrollment = as.numeric(enrollment)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\nRows: 2411 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): YEAR, REGION, COUNTY NAME, DISTRICT NUMBER, DISTRICT NAME, CHARTER ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `enrollment = as.numeric(enrollment)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\nRows: 2417 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): YEAR, REGION, COUNTY NAME, DISTRICT NUMBER, DISTRICT NAME, CHARTER ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `enrollment = as.numeric(enrollment)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\nRows: 2421 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): YEAR, REGION, COUNTY NAME, DISTRICT NUMBER, DISTRICT NAME, CHARTER ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `enrollment = as.numeric(enrollment)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\nRows: 2417 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (8): YEAR, REGION, COUNTY NAME, DISTRICT NUMBER, DISTRICT NAME, CHARTER ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `enrollment = as.numeric(enrollment)`.\nCaused by warning:\n! NAs introduced by coercion\n\nenrollment_all |&gt; tail(500)\n\n\n  \n\n\n\n\nenrollment_by_district &lt;- enrollment_all |&gt; group_by(district_name, year) |&gt; \n  summarize(total_enrollment = sum(enrollment, na.rm = T)) \n\n`summarise()` has grouped output by 'district_name'. You can override using the\n`.groups` argument.\n\nenrollment_by_district \n\n\n  \n\n\n\n\nenrollment_by_district |&gt; write_rds(\"data-processed/enrollment-by-district.rds\")",
    "crumbs": [
      "Cleaning TEA Enrollment"
    ]
  },
  {
    "objectID": "AnalysisInitial.html",
    "href": "AnalysisInitial.html",
    "title": "AnalysisTEASalaries",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(sf)\nlibrary(mapview)\nlibrary(RColorBrewer)",
    "crumbs": [
      "Initial Analysis"
    ]
  },
  {
    "objectID": "AnalysisInitial.html#setup",
    "href": "AnalysisInitial.html#setup",
    "title": "AnalysisTEASalaries",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(sf)\nlibrary(mapview)\nlibrary(RColorBrewer)",
    "crumbs": [
      "Initial Analysis"
    ]
  },
  {
    "objectID": "AnalysisInitial.html#read-in-cleaned-data",
    "href": "AnalysisInitial.html#read-in-cleaned-data",
    "title": "AnalysisTEASalaries",
    "section": "Read in cleaned data",
    "text": "Read in cleaned data\n\nteaching_staff_salaries &lt;- read_rds(\"data-processed/teaching_staff_salaries.rds\")\ncpi &lt;- read_rds(\"data-processed/cpi_201401_202502\")\nhousehold_budget_simple &lt;- read_rds(\"data-processed/alice_household_budget.rds\")\nenrollment &lt;- read_rds(\"data-processed/enrollment-by-district.rds\")\n\nNow I want to only look at totals for teaching staff at each district. I also want to exclude charters and exclude the weird small pay amounts.\n\nteaching_staff_totals_no_enroll &lt;- teaching_staff_salaries |&gt; \n  filter(staff == \"TOTAL TEACHING STAFF\" & average_base_pay &gt; 10000 & charter_status == \"TRADITIONAL ISD/CSD\")\n\nteaching_staff_totals_no_enroll\n\n\n  \n\n\n\nI want to add enrollment to this dataframe.\n\nteaching_staff_totals &lt;- teaching_staff_totals_no_enroll |&gt; \n   left_join(enrollment, by = c(\"district_name.x\" = \"district_name\", \"school_year\" = \"year\"))\n\nteaching_staff_totals |&gt; tail()\n\n\n  \n\n\n\nNow let’s look at the average pay per district per year so we can look at it over time.\n\nteaching_staff_average_school_years &lt;- teaching_staff_totals |&gt;\n  group_by(district_name.x, school_year) |&gt; summarize(avg_pay = mean(average_base_pay))\n\n`summarise()` has grouped output by 'district_name.x'. You can override using\nthe `.groups` argument.\n\nteaching_staff_average_school_years\n\n\n  \n\n\n\nOkay there’s too many schools for us to graph these all at once. Maybe if we just do one region (central texas, 13).\n\naustin_schools &lt;- teaching_staff_totals |&gt; filter(region == \"13\") |&gt; \n  group_by(district_name.x, school_year) |&gt; summarize(avg_pay = mean(average_base_pay)) \n\n`summarise()` has grouped output by 'district_name.x'. You can override using\nthe `.groups` argument.\n\naustin_schools\n\n\n  \n\n\n\nThat’s still too many to be understandable on a graph. Let’s instead look at just one district.\n\naustin &lt;- austin_schools |&gt; filter(district_name.x == \"AUSTIN ISD\")\n\n\nggplot(austin, aes(x = school_year, y = avg_pay, color = district_name.x, group = district_name.x)) +\n  geom_line() + \n  theme(legend.position = \"none\") #+\n\n\n\n\n\n\n\n  #facet_wrap(~district_name)    # we can use this if we are looking at multiple districts\n\n\nwrite_rds(teaching_staff_totals, \"data-processed/teaching_staff_totals.rds\")",
    "crumbs": [
      "Initial Analysis"
    ]
  },
  {
    "objectID": "AnalysisInitial.html#with-district-types",
    "href": "AnalysisInitial.html#with-district-types",
    "title": "AnalysisTEASalaries",
    "section": "With District Types",
    "text": "With District Types\nI want to see how many districts are in each category from TEA in 2024.\n\nteaching_staff_totals |&gt; group_by(tea_description) |&gt; count(name = \"total_districts\")\n\n\n  \n\n\n\n\nteaching_staff_totals |&gt; filter(school_year == \"2023-2024\") |&gt; group_by(tea_description) |&gt; count(name = \"total_districts\")\n\n\n  \n\n\n\nNow I want to see the average pay for each TEA district type for each school year.\n\ndistrict_types_tea_chart &lt;- teaching_staff_totals |&gt; group_by(tea_description, school_year) |&gt; \n  summarize(avg_pay = mean(average_base_pay))\n\n`summarise()` has grouped output by 'tea_description'. You can override using\nthe `.groups` argument.\n\ndistrict_types_tea_chart\n\n\n  \n\n\n\n\nChart\nNow let’s chart it.\n\nggplot(district_types_tea_chart, aes(x = school_year, y = avg_pay, color = tea_description, group = tea_description)) +\n  geom_point() +\n  geom_line() +\n  theme(legend.position = \"bottom\") +\n  guides(color = guide_legend(nrow = 4, byrow = TRUE))",
    "crumbs": [
      "Initial Analysis"
    ]
  },
  {
    "objectID": "AnalysisInitial.html#adding-cost-of-living",
    "href": "AnalysisInitial.html#adding-cost-of-living",
    "title": "AnalysisTEASalaries",
    "section": "Adding Cost of Living",
    "text": "Adding Cost of Living\nNow that we have ALICE’s household survival budget, I can use it to compare that to each districts salaries.\nNow, I am going to left join it on both the county and year.\n\nsalaries_col &lt;- left_join(teaching_staff_totals, household_budget_simple, by = c(\"county\", \"end_year\"))\n\nsalaries_col\n\n\n  \n\n\n\nThere are a few years that are inconsistent between the datasets. But since I have data around each year, I can use that. For example, I want to use 2016 for 2015 when needed. But, I also want to use 2022 for 2024 when needed. So I am going to fill up first, then down in each county.\nFirst, I am going to it out with a single district.\n\ntesting_filling &lt;- salaries_col |&gt; filter(county == \"ANDERSON COUNTY\") |&gt; select(\n  county, district_name.x, district_number, school_year, end_year, alice_threshold_hh_under_65) |&gt; \n  fill(alice_threshold_hh_under_65, .direction = \"updown\")\n\n\ntesting_filling\n\n\n  \n\n\n\nActually, I want to fill down first then up, because I want to use the previous year when necessary instead of a future year and then for 2015 I will use 2016.\nI’ll do it for all of the data.\n\nsalaries_col_fill &lt;- salaries_col |&gt; arrange(county, end_year) |&gt; \n  group_by(county) |&gt; \n  fill(alice_threshold_hh_under_65, .direction = \"downup\")\n\nsalaries_col_fill\n\n\n  \n\n\n\nNow I want to see the difference between the ALICE budget and the average salary for each district.\n\nsalary_col_comparison &lt;- salaries_col_fill |&gt; mutate(\n  difference = (average_base_pay - alice_threshold_hh_under_65) |&gt; round_half_up()\n  ) |&gt; select(\n  region, county, \"district_name\" = \"district_name.x\", district_number, total_enrollment, average_base_pay, school_year, end_year, tea_description, nces_description, alice_threshold_hh_under_65, difference\n)\n\nsalary_col_comparison\n\n\n  \n\n\n\n\nwrite_rds(salary_col_comparison, \"data-processed/salary_col_comparison.rds\")\n\nLet’s look at the districts with the lowest values for difference in salary and ALICE, which means the most negative. I want to see the worst 10 for each year.\n\nsalary_col_comparison |&gt; group_by(end_year) |&gt; slice_min(difference, n = 10)\n\n\n  \n\n\n\nNow let’s see the best 10 for each year (most positive).\n\nsalary_col_comparison |&gt; group_by(end_year) |&gt; slice_max(difference, n = 10)\n\n\n  \n\n\n\nNow I want to see the average difference, median difference and count of districts for each TEA district type category.\n\nsalary_col_comparison |&gt; group_by(tea_description) |&gt; \n  summarize(avg_difference = mean(difference),\n            median_difference = median(difference),\n            number_of_districts = n()) |&gt; \n            # fix number of districts, maybe\n  arrange(avg_difference)\n\n\n  \n\n\n\nNow I want to look at the average difference over time.\n\navg_difference_over_time &lt;- salary_col_comparison |&gt; group_by(tea_description, end_year) |&gt; \n  summarize(avg_difference = mean(difference))\n\n`summarise()` has grouped output by 'tea_description'. You can override using\nthe `.groups` argument.\n\navg_difference_over_time\n\n\n  \n\n\n\nLet’s graph it.\n\nggplot(avg_difference_over_time, \n       aes(x = end_year, y = avg_difference, color = tea_description, group = tea_description)) + \n  geom_line() +\n  scale_y_continuous(limits = c(-10000,5000), n.breaks = 10)\n\n\n\n\n\n\n\n\nThis graph shows the average difference between a district’s salary and the ALICE cost of living threshold for each TEA district type over time.",
    "crumbs": [
      "Initial Analysis"
    ]
  },
  {
    "objectID": "AnalysisInitial.html#bill-categories",
    "href": "AnalysisInitial.html#bill-categories",
    "title": "AnalysisTEASalaries",
    "section": "Bill Categories",
    "text": "Bill Categories\nI am going to create a bill category column that includes the different categories the SB and HB have defined as important to the bill. These numbers incluse 5000, 1600 and 300.\n\nbill_category_df &lt;-salary_col_comparison |&gt; mutate(\n  bill_category = case_when(\n    total_enrollment &gt;= 5000 ~ \"over 5000\",\n    total_enrollment &lt; 300 ~ \"under 300\",\n    total_enrollment &lt; 1600 ~ \"under 1600\",\n    total_enrollment &lt; 5000 ~ \"under 5000\")\n) |&gt; mutate(\n  bill_category = factor(bill_category, levels = c(\"under 300\", \"under 1600\", \"under 5000\", \"over 5000\"))\n)\n\nbill_category_df\n\n\n  \n\n\n\n\nwrite_rds(bill_category_df, \"data-processed/bill_cateogry_df.rds\")\n\nI am going to use the column bill_category to look at what the col vs salary looks like for the categories the bill wants to target. This is the same concept as above but for these bill categories instead of tea categories.\n\nbill_category_df |&gt; group_by(bill_category) |&gt; \n  summarize(avg_difference = mean(difference, na.rm = T),\n            median_difference = median(difference, na.rm = T),\n            total_districts_since_2015 = n())\n\n\n  \n\n\n\n\nbill_category_df |&gt; filter(end_year == 2024) |&gt; \n  group_by(bill_category) |&gt; \n  summarize(avg_difference = mean(difference, na.rm = T),\n            median_difference = median(difference, na.rm = T),\n            total_districts_2024 = n())\n\n\n  \n\n\n\n\navg_difference_bill_category &lt;- bill_category_df |&gt; group_by(bill_category, end_year) |&gt; \n  summarize(avg_difference = mean(difference, na.rm = T))\n\n`summarise()` has grouped output by 'bill_category'. You can override using the\n`.groups` argument.\n\navg_difference_bill_category\n\n\n  \n\n\n\n\nggplot(avg_difference_bill_category, \n       aes(x = end_year, y = avg_difference, color = bill_category, group = bill_category)) + \n  geom_line() +\n  scale_y_continuous(limits = c(-10000,5000), n.breaks = 10)",
    "crumbs": [
      "Initial Analysis"
    ]
  },
  {
    "objectID": "AnalysisInitial.html#proportion-of-districts-with-salary-above-and-below-alice-line",
    "href": "AnalysisInitial.html#proportion-of-districts-with-salary-above-and-below-alice-line",
    "title": "AnalysisTEASalaries",
    "section": "Proportion of districts with salary above and below alice line",
    "text": "Proportion of districts with salary above and below alice line\nI want to know how many districts have salaries that meet the ALICE line or not. And find the proportion of of those districts for each TEA district type and based on the bill categories for districts.\nFirst, I want to create a column that indicates if the salary is above or below ALICE.\n\n# in a district category whats the number of districts where the salary is below alice for that district dividied by the total number of districts in that category\n\nabove_below_alice &lt;- bill_category_df |&gt; mutate(\n  above_alice = case_when(\n    average_base_pay &gt;= alice_threshold_hh_under_65 ~ T,\n    TRUE ~ F\n  )\n)\n\nabove_below_alice\n\n\n  \n\n\n\nNow I am goint to count the number of districts below alice, count the total number of districts in each tea district group and then calculate the proportion of districts that fall below the line.\n\nabove_below_alice |&gt; group_by(tea_description) |&gt; \n  summarize(under_alice = sum(above_alice == FALSE),\n            total_districts_since_2015 = n()) |&gt; \n  mutate(prop_under_alice = (under_alice / total_districts_since_2015) |&gt; round_half_up(3)) |&gt; \n  arrange(desc(prop_under_alice))\n\n\n  \n\n\n\nNow I want this for 2024.\n\nabove_below_alice |&gt; filter(end_year == 2024) |&gt; \n  group_by(tea_description) |&gt; \n  summarize(under_alice = sum(above_alice == FALSE),\n            total_districts_2024 = n()) |&gt; \n  mutate(prop_under_alice = (under_alice / total_districts_2024) |&gt; round_half_up(3)) |&gt; \n  arrange(desc(prop_under_alice))\n\n\n  \n\n\n\nNow here’s the same thing but for the bill categories.\n\nabove_below_alice |&gt; group_by(bill_category) |&gt; \n  summarize(under_alice = sum(above_alice == FALSE),\n            total_districts_2024 = n()) |&gt; \n  mutate(prop_under_alice = (under_alice / total_districts_2024) |&gt; round_half_up(3)) |&gt; \n  arrange(desc(prop_under_alice))\n\n\n  \n\n\n\nAnd again but for 2024.\n\nabove_below_alice |&gt; filter(end_year == 2024) |&gt; \n  group_by(bill_category) |&gt; \n  summarize(under_alice = sum(above_alice == FALSE),\n            total_districts_2024 = n()) |&gt; \n  mutate(prop_under_alice = (under_alice / total_districts_2024) |&gt; round_half_up(3)) |&gt; \n  arrange(desc(prop_under_alice))\n\n\n  \n\n\n\n\nwrite_rds(above_below_alice, \"data-processed/above_below_alice.rds\")",
    "crumbs": [
      "Initial Analysis"
    ]
  },
  {
    "objectID": "AnalysisInitial.html#proportion-abovebelow-alice-over-time",
    "href": "AnalysisInitial.html#proportion-abovebelow-alice-over-time",
    "title": "AnalysisTEASalaries",
    "section": "Proportion above/below alice over time",
    "text": "Proportion above/below alice over time\nNow let’s do the same thing as above but look at it over time so I can graph it. First for tea categories.\n\nabove_below_alice_over_time_tea &lt;- above_below_alice |&gt; group_by(tea_description, end_year) |&gt; \n  summarize(under_alice = sum(above_alice == FALSE),\n            total_districts = n()) |&gt; \n  mutate(prop_under_alice = (under_alice / total_districts) |&gt; round_half_up(3)) |&gt; \n  arrange(desc(prop_under_alice))\n\n`summarise()` has grouped output by 'tea_description'. You can override using\nthe `.groups` argument.\n\nabove_below_alice_over_time_tea\n\n\n  \n\n\n\n\nggplot(above_below_alice_over_time_tea, \n       aes(x = end_year, \n           y = prop_under_alice, \n           color = tea_description, \n           group = tea_description)) +\n  geom_line() +\n  scale_y_continuous(limits = c(0, 1))\n\n\n\n\n\n\n\n\nNow for the bill categories.\n\nabove_below_alice_over_time_bill &lt;- above_below_alice |&gt; group_by(bill_category, end_year) |&gt; \n  summarize(under_alice = sum(above_alice == FALSE),\n            total_districts = n()) |&gt; \n  mutate(prop_under_alice = (under_alice / total_districts) |&gt; round_half_up(3)) |&gt; \n  arrange(desc(prop_under_alice))\n\n`summarise()` has grouped output by 'bill_category'. You can override using the\n`.groups` argument.\n\nabove_below_alice_over_time_bill\n\n\n  \n\n\n\n\nggplot(above_below_alice_over_time_bill, \n       aes(x = end_year, \n           y = prop_under_alice, \n           color = bill_category, \n           group = bill_category)) +\n  geom_line() +\n  scale_y_continuous(limits = c(0,1))\n\n\n\n\n\n\n\n\nQuestions from Camille 4/16: Which districts by type have the biggest discrepancy between cost of living and their average salary proportion of districts in each category that are above/below alice threshold How many districts of each type are under 5000 enrollment? What percentage of districts in each type are under 5000 enrollment? How many urban/suburban districts are under 5000 and how do they pay their teachers? This number of districts in texas pay their teachers under living wage (or percentage) What percentage of students are served by teachers that are underpaid?\nSpreadsheet from 2024: district type, district name, alice cost of living, avg_salary, difference, county, bill_category, enrollment ALICE methodology",
    "crumbs": [
      "Initial Analysis"
    ]
  },
  {
    "objectID": "AnalysisRegion20.html",
    "href": "AnalysisRegion20.html",
    "title": "AnalysisRegion20",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(sf)\nlibrary(mapview)\nlibrary(RColorBrewer)\n\n\nsalary_col_comparison &lt;- read_rds(\"data-processed/salary_col_comparison.rds\")\nbill_category_df &lt;- read_rds(\"data-processed/bill_cateogry_df.rds\")"
  },
  {
    "objectID": "AnalysisRegion20.html#setup",
    "href": "AnalysisRegion20.html#setup",
    "title": "AnalysisRegion20",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(sf)\nlibrary(mapview)\nlibrary(RColorBrewer)\n\n\nsalary_col_comparison &lt;- read_rds(\"data-processed/salary_col_comparison.rds\")\nbill_category_df &lt;- read_rds(\"data-processed/bill_cateogry_df.rds\")"
  },
  {
    "objectID": "AnalysisRegion20.html#region-20---san-antonio",
    "href": "AnalysisRegion20.html#region-20---san-antonio",
    "title": "AnalysisRegion20",
    "section": "Region 20 - San Antonio",
    "text": "Region 20 - San Antonio\nAll of the above for region 20…\n\nregion_20 &lt;- salary_col_comparison |&gt; filter(region == 20)\n\nregion_20\n\n\n  \n\n\n\n\nregion_20 |&gt; group_by(end_year) |&gt; slice_min(difference, n = 10)\n\n\n  \n\n\n\n\nregion_20 |&gt; group_by(end_year) |&gt; slice_max(difference, n = 10)\n\n\n  \n\n\n\nAverage and Median difference for all years together\n\nregion_20 |&gt; group_by(tea_description) |&gt; \n  summarize(avg_difference = mean(difference),\n            median_difference = median(difference),\n            number_of_districts_since_2015 = n()) |&gt; \n  arrange(avg_difference)\n\n\n  \n\n\n\naverage and median difference for 2024.\n\nregion_20 |&gt; filter(end_year == 2024) |&gt; \n  group_by(tea_description) |&gt; \n  summarize(avg_difference = mean(difference),\n            median_difference = median(difference),\n            number_of_districts_2024 = n()) |&gt; \n  arrange(avg_difference)\n\n\n  \n\n\n\n\navg_difference_over_time_20 &lt;- region_20 |&gt; group_by(tea_description, end_year) |&gt; \n  summarize(avg_difference = mean(difference, na.rm = T))\n\n`summarise()` has grouped output by 'tea_description'. You can override using\nthe `.groups` argument.\n\navg_difference_over_time_20\n\n\n  \n\n\n\n\nggplot(avg_difference_over_time_20, \n       aes(x = end_year, y = avg_difference, color = tea_description, group = tea_description)) + \n  geom_line() +\n  scale_y_continuous(limits = c(-10000,5000), n.breaks = 10)\n\nWarning: Removed 5 rows containing missing values (`geom_line()`).\n\n\n\n\n\n\n\n\n\n\nbill_category_df |&gt; filter(region == 20) |&gt; \n  group_by(bill_category) |&gt; \n  summarize(avg_difference = mean(difference, na.rm = T),\n            median_difference = median(difference, na.rm = T),\n            total_districts_since_2015 = n())\n\n\n  \n\n\n\n\nbill_category_df |&gt; filter(region == 20 & end_year == 2024) |&gt; \n  group_by(bill_category) |&gt; \n  summarize(avg_difference = mean(difference, na.rm = T),\n            median_difference = median(difference, na.rm = T),\n            total_districts_2024 = n())\n\n\n  \n\n\n\n\navg_difference_bill_category_20 &lt;- bill_category_df |&gt; \n  filter(region == 20) |&gt; \n  group_by(bill_category,end_year) |&gt; \n  summarize(avg_difference = mean(difference, na.rm = T))\n\n`summarise()` has grouped output by 'bill_category'. You can override using the\n`.groups` argument.\n\navg_difference_bill_category_20\n\n\n  \n\n\n\n\nggplot(avg_difference_bill_category_20, \n       aes(x = end_year, y = avg_difference, color = bill_category, group = bill_category)) + \n  geom_line() +\n  scale_y_continuous(limits = c(-10000,5000), n.breaks = 10)\n\n\n\n\n\n\n\n\n\nSame as above but for region 20\n\nregion_20 |&gt; group_by(nces_description) |&gt; \n  summarize(avg_difference = mean(difference),\n            median_difference = median(difference),\n            number_of_districts = n()) |&gt; \n  arrange(avg_difference)"
  }
]