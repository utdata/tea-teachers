---
title: "Cleaning TEA Salaries"
format: html
---

## Setup

Importing the libraries we need.

```{r}
#| label: setup
#| message: false

library(tidyverse)
library(janitor)
```


## Import all the salary files

```{r}
#| label: file-list

salary_files_list <- list.files(
  "data-raw",
  pattern = ".csv",
  full.names = T
)

salary_files_list

```

```{r}
#| label: import

import_files <- function(file_name) {
  df <- file_name |> 
    read_csv(     #read csv first and skip the TEA heading lines
      skip = 5) |>
    clean_names() |> 
    mutate(fte_count = as.numeric(fte_count),
           total_base_pay = as.numeric(total_base_pay),
           average_base_pay = as.numeric(average_base_pay))
}

tea_salaries <- salary_files_list |> set_names(basename) |> 
  map(import_files) |>  #map on our new function
  list_rbind(names_to = "source")

tea_salaries

```

I know that the end of each file has weird extra lines with extra text. Let's remove all of those lines that don't have an actual region. Then we check that the files combined correctly by looking at the end of the datatset

```{r}
tea_salaries <- tea_salaries |> filter(str_length(region) <= 2)

tea_salaries |> tail(50)

```

Another check that the files combined correctly. 

```{r}
tea_salaries |> group_by(district) |> 
  summarize(total = n())

```

Another check that the files combined correctly. 

```{r}
tea_salaries$staff_category |> unique()
```

"TRADITIONAL ISD/CSD" shouldn't be in there. Let's see where that error is occurring. 

```{r}
tea_salaries |> filter(staff_category == "TRADITIONAL ISD/CSD")
```

It's only one row...and it looks like it might be missing data. Let's look at all the rows for this district. 

```{r}
tea_salaries |> filter(district == "176901")
```

These look normal...we only want staff_category that is "TEACHING STAFF" anyways so we can disregard that weird row since it has "ADMINISTRATIVE STAFF". 

Now we want to pull the school year from the file name (source column). Then we will get rid of that source column cause we don't need it anymore and then I need ot factor the years so R understands that the strings have an order. 

```{r}
teaching_staff_salaries <- tea_salaries |> filter(staff_category == "TEACHING STAFF") |> 
  mutate(school_year = substr(source, start = (nchar(source) - 13 + 1), stop = nchar(source)-4))

teaching_staff_salaries <- teaching_staff_salaries |> select(-source) |> 
  mutate(
    school_year = factor(school_year, 
                         levels = c("2014-2015", "2015-2016", "2016-2017", "2017-2018", "2018-2019", "2019-2020", "2020-2021", "2021-2022", "2022-2023", "2023-2024")))

teaching_staff_salaries
```

## Export

I want to export the above dataframe to use for analysis in my next notebook.

```{r}
teaching_staff_salaries |> write_rds("data-processed/teaching_staff_salaries.rds")
```















